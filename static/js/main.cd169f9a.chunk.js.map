{"version":3,"sources":["components/logo192.png","components/square.jsx","components/grid.jsx","components/menu.jsx","components/pathFind.jsx","components/app.jsx","serviceWorker.js","index.js"],"names":["module","exports","Square","setStyle","square","style","val","className","this","props","onClick","gOnClick","row","col","Component","Grid","state","notFound","setGrid","map","r","c","aOnClick","Menu","src","require","alt","startSearch","type","name","value","checked","activeOption","onChange","changeEvent","optionChange","target","diag","diagChange","clrObs","rstBrd","h","w","BFS","sRow","sCol","console","log","tempGrid","Array","fill","_","retGrid","found","j","k","d","visited","prevR","prevC","node","newList","start","push","length","shift","len","initialGrid","App","diagSelected","selectedOption","startRow","startCol","endRow","endCol","currentGrid","notFoundMsg","pathLength","handleOptionChange","setState","handleDiagChange","handleClearObs","handleResetBoard","handleClick","i","handleSearch","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.cd169f9a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo192.0e4047e2.png\";","import React, { Component } from \"react\";\n\nclass Square extends Component {\n  render() {\n    return (\n      <button\n        className={this.setStyle(this.props.square)}\n        onClick={() => this.props.gOnClick(this.props.row, this.props.col)}\n      ></button>\n    );\n    console.log(this.props.row, this.props.col);\n  }\n  //0empty, 1start, 2end, 3obs\n  setStyle = (square) => {\n    let style = \"sq border btn m-0 rounded-0 btn-\";\n    style +=\n      square.val === \"1\"\n        ? \"success\"\n        : square.val === \"2\"\n        ? \"danger\"\n        : square.val === \"0\"\n        ? \"light\"\n        : square.val === \"3\"\n        ? \"secondary\"\n        : \"warning\";\n    return style;\n  };\n}\n\nexport default Square;\n","import React, { Component } from \"react\";\nimport Square from \"./square\";\n\nclass Grid extends Component {\n  state = {};\n\n  render() {\n    return (\n      <span>\n        <span>{this.props.notFound}</span>\n        <span className=\"grid\">\n          {this.props.setGrid.map((row) => (\n            <div>\n              {row.map((square) => (\n                <Square\n                  square={square}\n                  row={square.r}\n                  col={square.c}\n                  gOnClick={this.props.aOnClick}\n                ></Square>\n              ))}\n            </div>\n          ))}\n        </span>\n      </span>\n    );\n  }\n}\n\nexport default Grid;\n","import React, { Component } from \"react\";\n\nclass Menu extends Component {\n  render() {\n    return (\n      <div>\n        <img\n          className=\"logo\"\n          src={require(\"./logo192.png\")}\n          alt=\"image gayab\"\n        />\n        <span className=\"menusp\">\n          <button\n            className=\"btn-default m-2 btn-block opt\"\n            onClick={this.props.startSearch}\n          >\n            START SEARCH\n          </button>\n          <form>\n            <div className=\"form-check\">\n              <label>\n                <input\n                  type=\"radio\"\n                  name=\"set-squares\"\n                  value=\"1\"\n                  checked={this.props.activeOption === \"1\"}\n                  onChange={(changeEvent) =>\n                    this.props.optionChange(changeEvent.target.value)\n                  }\n                  className=\"set-squares\"\n                />\n                Set Start\n              </label>\n            </div>\n            <div className=\"form-check\">\n              <label>\n                <input\n                  type=\"radio\"\n                  name=\"set-squares\"\n                  value=\"2\"\n                  checked={this.props.activeOption === \"2\"}\n                  onChange={(changeEvent) =>\n                    this.props.optionChange(changeEvent.target.value)\n                  }\n                  className=\"set-squares\"\n                />\n                Set Destination\n              </label>\n            </div>\n            <div className=\"form-check\">\n              <label>\n                <input\n                  type=\"radio\"\n                  name=\"set-squares\"\n                  value=\"3\"\n                  checked={this.props.activeOption === \"3\"}\n                  onChange={(changeEvent) =>\n                    this.props.optionChange(changeEvent.target.value)\n                  }\n                  className=\"set-squares\"\n                />\n                Set Obstacles\n              </label>\n            </div>\n          </form>\n          <label>\n            <input\n              name=\"diag\"\n              type=\"checkbox\"\n              checked={this.props.diag}\n              onChange={(changeEvent) =>\n                this.props.diagChange(changeEvent.target.checked)\n              }\n            />\n            Allow Diagonal Paths\n          </label>\n\n          <button\n            className=\"btn-default m-2 btn-block opt\"\n            onClick={this.props.clrObs}\n          >\n            CLEAR OBSTACLES\n          </button>\n          <div>\n            <button\n              className=\"btn-default m-2 btn-block opt\"\n              onClick={this.props.rstBrd}\n            >\n              RESET BOARD\n            </button>\n          </div>\n        </span>\n      </div>\n    );\n  }\n}\n\nexport default Menu;\n","const h = 20;\r\nconst w = 23;\r\nfunction BFS(sRow, sCol, Grid, diag) {\r\n  console.log(\"reached bfs\");\r\n  let tempGrid = Array(h)\r\n    .fill()\r\n    .map((_) => Array(w).fill(\"\"));\r\n  let retGrid = Array(h)\r\n    .fill()\r\n    .map((_) => Array(w).fill(\"\"));\r\n\r\n  let found = false;\r\n  for (let j = 0; j < h; j++) {\r\n    for (let k = 0; k < w; k++) {\r\n      tempGrid[j][k] = {\r\n        r: j,\r\n        c: k,\r\n        val: Grid[j][k].val === \"4\" ? \"0\" : Grid[j][k].val,\r\n        d: 0,\r\n        visited: Grid[j][k].val === \"3\" ? true : false,\r\n        prevR: 0,\r\n        prevC: 0,\r\n      };\r\n      retGrid[j][k] = {\r\n        r: j,\r\n        c: k,\r\n        val: Grid[j][k].val === \"4\" ? \"0\" : Grid[j][k].val,\r\n      };\r\n    }\r\n  }\r\n\r\n  var newList = [];\r\n  var start = tempGrid[sRow][sCol];\r\n  newList.push(start);\r\n  start.visited = true;\r\n  var node;\r\n\r\n  while (newList.length) {\r\n    node = newList.shift();\r\n    if (node.val === \"2\") {\r\n      found = true;\r\n      break;\r\n    }\r\n\r\n    //moving up\r\n    if (node.r - 1 >= 0 && tempGrid[node.r - 1][node.c].visited === false) {\r\n      tempGrid[node.r - 1][node.c].d = node.d + 1;\r\n      tempGrid[node.r - 1][node.c].visited = true;\r\n      tempGrid[node.r - 1][node.c].prevR = node.r;\r\n      tempGrid[node.r - 1][node.c].prevC = node.c;\r\n      newList.push(tempGrid[node.r - 1][node.c]);\r\n    }\r\n    //moving down\r\n    if (node.r + 1 < h && tempGrid[node.r + 1][node.c].visited === false) {\r\n      tempGrid[node.r + 1][node.c].d = node.d + 1;\r\n      tempGrid[node.r + 1][node.c].visited = true;\r\n      tempGrid[node.r + 1][node.c].prevR = node.r;\r\n      tempGrid[node.r + 1][node.c].prevC = node.c;\r\n      newList.push(tempGrid[node.r + 1][node.c]);\r\n    }\r\n    //moving left\r\n    if (node.c - 1 >= 0 && tempGrid[node.r][node.c - 1].visited === false) {\r\n      tempGrid[node.r][node.c - 1].d = node.d + 1;\r\n      tempGrid[node.r][node.c - 1].visited = true;\r\n      tempGrid[node.r][node.c - 1].prevR = node.r;\r\n      tempGrid[node.r][node.c - 1].prevC = node.c;\r\n      newList.push(tempGrid[node.r][node.c - 1]);\r\n    }\r\n    //moving right\r\n    if (node.c + 1 < w && tempGrid[node.r][node.c + 1].visited === false) {\r\n      tempGrid[node.r][node.c + 1].d = node.d + 1;\r\n      tempGrid[node.r][node.c + 1].visited = true;\r\n      tempGrid[node.r][node.c + 1].prevR = node.r;\r\n      tempGrid[node.r][node.c + 1].prevC = node.c;\r\n      newList.push(tempGrid[node.r][node.c + 1]);\r\n    }\r\n    //If diagonal movement allowed\r\n    if (diag === true) {\r\n      if (\r\n        node.r - 1 >= 0 &&\r\n        node.c - 1 >= 0 &&\r\n        tempGrid[node.r - 1][node.c - 1].visited === false\r\n      ) {\r\n        tempGrid[node.r - 1][node.c - 1].d = node.d + 1;\r\n        tempGrid[node.r - 1][node.c - 1].visited = true;\r\n        tempGrid[node.r - 1][node.c - 1].prevR = node.r;\r\n        tempGrid[node.r - 1][node.c - 1].prevC = node.c;\r\n\r\n        newList.push(tempGrid[node.r - 1][node.c - 1]);\r\n      }\r\n      //top right\r\n      if (\r\n        node.r - 1 >= 0 &&\r\n        node.c + 1 < w &&\r\n        tempGrid[node.r - 1][node.c + 1].visited === false\r\n      ) {\r\n        tempGrid[node.r - 1][node.c + 1].d = node.d + 1;\r\n        tempGrid[node.r - 1][node.c + 1].visited = true;\r\n        tempGrid[node.r - 1][node.c + 1].prevR = node.r;\r\n        tempGrid[node.r - 1][node.c + 1].prevC = node.c;\r\n        newList.push(tempGrid[node.r - 1][node.c + 1]);\r\n      }\r\n      //bottom left\r\n      if (\r\n        node.r + 1 < h &&\r\n        node.c - 1 >= 0 &&\r\n        tempGrid[node.r + 1][node.c - 1].visited === false\r\n      ) {\r\n        tempGrid[node.r + 1][node.c - 1].d = node.d + 1;\r\n        tempGrid[node.r + 1][node.c - 1].visited = true;\r\n        tempGrid[node.r + 1][node.c - 1].prevR = node.r;\r\n        tempGrid[node.r + 1][node.c - 1].prevC = node.c;\r\n        newList.push(tempGrid[node.r + 1][node.c - 1]);\r\n      }\r\n      //bottom right\r\n      if (\r\n        node.r + 1 < h &&\r\n        node.c + 1 < w &&\r\n        tempGrid[node.r + 1][node.c + 1].visited === false\r\n      ) {\r\n        tempGrid[node.r + 1][node.c + 1].d = node.d + 1;\r\n        tempGrid[node.r + 1][node.c + 1].visited = true;\r\n        tempGrid[node.r + 1][node.c + 1].prevR = node.r;\r\n        tempGrid[node.r + 1][node.c + 1].prevC = node.c;\r\n        newList.push(tempGrid[node.r + 1][node.c + 1]);\r\n      }\r\n    }\r\n  }\r\n  const len = node.d;\r\n  console.log(len);\r\n  if (!found) {\r\n    return [found, len, retGrid];\r\n  } else {\r\n    node = tempGrid[node.prevR][node.prevC];\r\n    while (node.val !== \"1\") {\r\n      retGrid[node.r][node.c].val = \"4\";\r\n      node = tempGrid[node.prevR][node.prevC];\r\n    }\r\n    return [found, len, retGrid];\r\n  }\r\n}\r\nexport default BFS;\r\n","import React, { Component } from \"react\";\nimport Grid from \"./grid\";\nimport Menu from \"./menu\";\nimport BFS from \"./pathFind\";\n\nconst sR = 9;\nconst sC = 3;\nconst eR = 9;\nconst eC = 19;\nconst h = 20;\nconst w = 23;\n\nlet initialGrid = Array(h)\n  .fill()\n  .map((_) => Array(w).fill(\"\"));\n\nfor (let j = 0; j < h; j++) {\n  for (let k = 0; k < w; k++) {\n    initialGrid[j][k] = { r: j, c: k, val: \"0\" };\n  }\n}\n\ninitialGrid[sR][sC].val = \"1\";\ninitialGrid[eR][eC].val = \"2\";\n\nclass App extends Component {\n  state = {\n    diagSelected: false,\n    selectedOption: \"3\",\n    startRow: sR,\n    startCol: sC,\n    endRow: eR,\n    endCol: eC,\n    currentGrid: initialGrid,\n    notFoundMsg: \"\",\n    pathLength: 0,\n  };\n\n  handleOptionChange = (value) => {\n    this.setState({\n      selectedOption: value,\n    });\n  };\n  handleDiagChange = (value) => {\n    this.setState({\n      diagSelected: value,\n    });\n  };\n  handleClearObs = () => {\n    let tempGrid = Array(h)\n      .fill()\n      .map((_) => Array(w).fill(\"\"));\n\n    for (let j = 0; j < h; j++) {\n      for (let k = 0; k < w; k++) {\n        tempGrid[j][k] = { r: j, c: k, val: \"0\" };\n      }\n    }\n\n    tempGrid[this.state.startRow][this.state.startCol].val = \"1\";\n    tempGrid[this.state.endRow][this.state.endCol].val = \"2\";\n    this.setState({ currentGrid: tempGrid, notFoundMsg: \"\", pathLength: 0 });\n\n    return;\n  };\n\n  handleResetBoard = () => {\n    let tempGrid = Array(h)\n      .fill()\n      .map((_) => Array(w).fill(\"\"));\n\n    for (let j = 0; j < h; j++) {\n      for (let k = 0; k < w; k++) {\n        tempGrid[j][k] = { r: j, c: k, val: \"0\" };\n      }\n    }\n    this.setState({ startRow: sR, startCol: sC, endRow: eR, endCol: eC });\n    tempGrid[sR][sC].val = \"1\";\n    tempGrid[eR][eC].val = \"2\";\n\n    this.setState({ currentGrid: tempGrid, notFoundMsg: \"\", pathLength: 0 });\n\n    return;\n  };\n  handleClick = (row, col) => {\n    this.setState({ notFoundMsg: \"\" });\n    let tempGrid = this.state.currentGrid;\n    let i = this.state.selectedOption;\n    //setting start and end\n    if (i === \"1\" || i === \"2\") {\n      if (\n        (this.state.startRow === row && this.state.startCol === col) ||\n        (this.state.endRow === row && this.state.endCol === col)\n      ) {\n        return;\n      } else {\n      }\n      if (i === \"1\") {\n        tempGrid[this.state.startRow][this.state.startCol].val = \"0\";\n        tempGrid[row][col].val = \"1\";\n        this.setState({ startRow: row, startCol: col });\n      } else {\n        tempGrid[this.state.endRow][this.state.endCol].val = \"0\";\n        tempGrid[row][col].val = \"2\";\n        this.setState({ endRow: row, endCol: col });\n      }\n    }\n\n    //setting obstacles\n    else {\n      if (i === \"3\") {\n        if (\n          (this.state.startRow === row && this.state.startCol === col) ||\n          (this.state.endRow === row && this.state.endCol === col)\n        ) {\n          return;\n        } else {\n          tempGrid[row][col].val = tempGrid[row][col].val !== \"3\" ? \"3\" : \"0\";\n        }\n      }\n    }\n\n    this.setState({ currentGrid: tempGrid });\n    return;\n  };\n  handleSearch = () => {\n    console.log(\"reached handle\");\n\n    const [found, len, tempGrid] = BFS(\n      this.state.startRow,\n      this.state.startCol,\n      this.state.currentGrid,\n      this.state.diagSelected\n    );\n\n    if (found) {\n      this.setState({\n        currentGrid: tempGrid,\n        notFoundMsg: \"\",\n        pathLength: len,\n      });\n    } else {\n      this.setState({\n        currentGrid: tempGrid,\n        notFoundMsg: <p className=\"err\">NO PATH AVAILABLE</p>,\n        pathLength: 0,\n      });\n    }\n    return;\n  };\n  render() {\n    return (\n      <div>\n        <Menu\n          optionChange={this.handleOptionChange}\n          activeOption={this.state.selectedOption}\n          clrObs={this.handleClearObs}\n          rstBrd={this.handleResetBoard}\n          startSearch={this.handleSearch}\n          diag={this.state.diagSelected}\n          diagChange={this.handleDiagChange}\n        />\n\n        <Grid\n          setGrid={this.state.currentGrid}\n          aOnClick={this.handleClick}\n          notFound={this.state.notFoundMsg}\n        />\n        <div className=\"length\">\n          <div>Path Length</div>\n          <div>{this.state.pathLength}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/app\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}